.TH "set" 3 "Wed Dec 28 2016" "Version 2.1.0" "ACP Library" \" -*- nroff -*-
.ad l
.nh
.SH NAME
set \- ACP Middle Layer Dara Library Set
.SS "Data Structures"

.in +1c
.ti -1c
.RI "struct \fBacp_set_t\fP"
.br
.ti -1c
.RI "struct \fBacp_set_it_t\fP"
.br
.ti -1c
.RI "struct \fBacp_set_ib_t\fP"
.br
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "void \fBacp_assign_local_set\fP (\fBacp_set_t\fP set1, \fBacp_set_t\fP set2)"
.br
.RI "Set type data assignment\&. "
.ti -1c
.RI "void \fBacp_assign_set\fP (\fBacp_set_t\fP set1, \fBacp_set_t\fP set2)"
.br
.RI "Set type data assignment\&. "
.ti -1c
.RI "\fBacp_set_it_t\fP \fBacp_begin_local_set\fP (\fBacp_set_t\fP set)"
.br
.RI "Query for the local head iterator of a set\&. "
.ti -1c
.RI "\fBacp_set_it_t\fP \fBacp_begin_set\fP (\fBacp_set_t\fP set)"
.br
.RI "Query for the head iterator of a set\&. "
.ti -1c
.RI "void \fBacp_clear_set\fP (\fBacp_set_t\fP set)"
.br
.RI "Set elimination\&. "
.ti -1c
.RI "\fBacp_set_t\fP \fBacp_create_set\fP (int num_ranks, const int *ranks, int num_slots, int rank)"
.br
.RI "Set creation\&. "
.ti -1c
.RI "void \fBacp_destroy_set\fP (\fBacp_set_t\fP set)"
.br
.RI "Set destruction\&. "
.ti -1c
.RI "int \fBacp_empty_local_set\fP (\fBacp_set_t\fP set)"
.br
.RI "Query for local set empty\&. "
.ti -1c
.RI "int \fBacp_empty_set\fP (\fBacp_set_t\fP set)"
.br
.RI "Query for set empty\&. "
.ti -1c
.RI "\fBacp_set_it_t\fP \fBacp_end_local_set\fP (\fBacp_set_t\fP set)"
.br
.RI "Query for the tail iterator of a set\&. "
.ti -1c
.RI "\fBacp_set_it_t\fP \fBacp_end_set\fP (\fBacp_set_t\fP set)"
.br
.RI "Query for the tail iterator of a set\&. "
.ti -1c
.RI "\fBacp_set_it_t\fP \fBacp_find_set\fP (\fBacp_set_t\fP set, \fBacp_element_t\fP key)"
.br
.RI "Search for the key in set that matches with key\&. "
.ti -1c
.RI "int \fBacp_insert_set\fP (\fBacp_set_t\fP set, \fBacp_element_t\fP key)"
.br
.RI "Insert a set element\&. "
.ti -1c
.RI "void \fBacp_merge_local_set\fP (\fBacp_set_t\fP set1, \fBacp_set_t\fP set2)"
.br
.RI "Merge the local keys\&. "
.ti -1c
.RI "void \fBacp_merge_set\fP (\fBacp_set_t\fP set1, \fBacp_set_t\fP set2)"
.br
.RI "Merge the keys\&. "
.ti -1c
.RI "void \fBacp_move_local_set\fP (\fBacp_set_t\fP set1, \fBacp_set_t\fP set2)"
.br
.RI "Move the local keys\&. "
.ti -1c
.RI "void \fBacp_move_set\fP (\fBacp_set_t\fP set1, \fBacp_set_t\fP set2)"
.br
.RI "Move the keys\&. "
.ti -1c
.RI "void \fBacp_remove_set\fP (\fBacp_set_t\fP set, \fBacp_element_t\fP key)"
.br
.RI "Erase a set element\&. "
.ti -1c
.RI "size_t \fBacp_size_local_set\fP (\fBacp_set_t\fP set)"
.br
.RI "Query of the number ot local keys in the set\&. "
.ti -1c
.RI "size_t \fBacp_size_set\fP (\fBacp_set_t\fP set)"
.br
.RI "Query of the data size in the set\&. "
.ti -1c
.RI "void \fBacp_swap_set\fP (\fBacp_set_t\fP set1, \fBacp_set_t\fP set2)"
.br
.RI "Swap set type data\&. "
.ti -1c
.RI "\fBacp_element_t\fP \fBacp_dereference_set_it\fP (\fBacp_set_it_t\fP it)"
.br
.RI "Query of the global address of a reference of set tyep iterator\&. "
.ti -1c
.RI "\fBacp_set_it_t\fP \fBacp_increment_set_it\fP (\fBacp_set_it_t\fP it)"
.br
.RI "Increment an iterater of a set data\&. "
.in -1c
.SH "Detailed Description"
.PP 
ACP Middle Layer Data Library Set 
.SH "Function Documentation"
.PP 
.SS "void acp_assign_local_set (\fBacp_set_t\fP set1, \fBacp_set_t\fP set2)"

.PP
Set type data assignment\&. Among the keys of set2, copy the keys that are allocated in the caller process\&. Keys of the destination set (set1) are destroyed\&.
.PP
\fBParameters:\fP
.RS 4
\fIset1\fP A reference of destination set data\&. 
.br
\fIset2\fP A reference of source set data\&. 
.RE
.PP

.SS "void acp_assign_set (\fBacp_set_t\fP set1, \fBacp_set_t\fP set2)"

.PP
Set type data assignment\&. Copy keys of set2\&. Keys of the destination set (set1) are destroyed\&.
.PP
\fBParameters:\fP
.RS 4
\fIset1\fP A reference of destination set data\&. 
.br
\fIset2\fP A reference of source set data\&. 
.RE
.PP

.SS "\fBacp_set_it_t\fP acp_begin_local_set (\fBacp_set_t\fP set)"

.PP
Query for the local head iterator of a set\&. Among the keys of set, query for the first key of the keys that are allocated in the caller process\&.
.PP
\fBParameters:\fP
.RS 4
\fIset\fP A reference of set type data\&. 
.RE
.PP
\fBReturn values:\fP
.RS 4
\fImember elem == ACP_GA_NULL\fP Fail 
.br
\fIotherwise\fP The head iterator of the set\&. 
.RE
.PP

.SS "\fBacp_set_it_t\fP acp_begin_set (\fBacp_set_t\fP set)"

.PP
Query for the head iterator of a set\&. 
.PP
\fBParameters:\fP
.RS 4
\fIset\fP A reference of set type data\&. 
.RE
.PP
\fBReturn values:\fP
.RS 4
\fImember elem == ACP_GA_NULL\fP Fail 
.br
\fIotherwise\fP The head iterator of the set\&. 
.RE
.PP

.SS "void acp_clear_set (\fBacp_set_t\fP set)"

.PP
Set elimination\&. Set the size of the set to be zero\&.
.PP
\fBParameters:\fP
.RS 4
\fIset\fP A reference of set data\&. 
.RE
.PP

.SS "\fBacp_set_t\fP acp_create_set (int num_ranks, const int * ranks, int num_slots, int rank)"

.PP
Set creation\&. Creates a set type data on any process\&.
.PP
\fBParameters:\fP
.RS 4
\fInum_ranks\fP A process number for assigning buckets 
.br
\fIranks\fP An array of rank number for assigning buckets 
.br
\fInum_slots\fP A number of bucket slot for one process 
.br
\fIrank\fP The rank number where has the control information of a set 
.RE
.PP
\fBReturn values:\fP
.RS 4
\fImember ga == ACP_GA_NULL\fP Fail 
.br
\fIotherwise\fP A reference of created set data\&. 
.RE
.PP

.SS "\fBacp_element_t\fP acp_dereference_set_it (\fBacp_set_it_t\fP it)"

.PP
Query of the global address of a reference of set tyep iterator\&. 
.PP
\fBParameters:\fP
.RS 4
\fIit\fP The iterator of set type data 
.RE
.PP
\fBReturn values:\fP
.RS 4
\fIacp_ga_t\fP The global address of a reference of set type iterator 
.RE
.PP

.SS "void acp_destroy_set (\fBacp_set_t\fP set)"

.PP
Set destruction\&. Destroies a set type data\&.
.PP
\fBParameters:\fP
.RS 4
\fIset\fP A reference of set data\&. 
.RE
.PP

.SS "int acp_empty_local_set (\fBacp_set_t\fP set)"

.PP
Query for local set empty\&. Query if, among the keys of set, the number of keys that are allocated in the caller process is zero\&.
.PP
\fBParameters:\fP
.RS 4
\fIset\fP A reference of set data\&. 
.RE
.PP
\fBReturn values:\fP
.RS 4
\fI1\fP Empty 
.br
\fI0\fP There is a set data 
.RE
.PP

.SS "int acp_empty_set (\fBacp_set_t\fP set)"

.PP
Query for set empty\&. 
.PP
\fBParameters:\fP
.RS 4
\fIset\fP A reference of set data\&. 
.RE
.PP
\fBReturn values:\fP
.RS 4
\fI1\fP Empty 
.br
\fI0\fP There is a set data 
.RE
.PP

.SS "\fBacp_set_it_t\fP acp_end_local_set (\fBacp_set_t\fP set)"

.PP
Query for the tail iterator of a set\&. Among the keys of set, query for the last key of the keys that are allocated in the caller process\&.
.PP
\fBParameters:\fP
.RS 4
\fIset\fP A reference of set type data\&. 
.RE
.PP
\fBReturn values:\fP
.RS 4
\fImember elem == ACP_GA_NULL\fP Fail 
.br
\fIoterhwise\fP The iterator that points to the behind of the last element 
.RE
.PP

.SS "\fBacp_set_it_t\fP acp_end_set (\fBacp_set_t\fP set)"

.PP
Query for the tail iterator of a set\&. 
.PP
\fBParameters:\fP
.RS 4
\fIset\fP A reference of set type data\&. 
.RE
.PP
\fBReturn values:\fP
.RS 4
\fImember elem == ACP_GA_NULL\fP Fail 
.br
\fIoterhwise\fP The iterator that points to the behind of the last element 
.RE
.PP

.SS "\fBacp_set_it_t\fP acp_find_set (\fBacp_set_t\fP set, \fBacp_element_t\fP key)"

.PP
Search for the key in set that matches with key\&. 
.PP
\fBParameters:\fP
.RS 4
\fIset\fP A reference of set type data 
.br
\fIkey\fP Key 
.RE
.PP
\fBReturn values:\fP
.RS 4
\fIiterator\fP An iterator of the key that matches with key\&. 
.br
\fIiterator\fP The end of the iterator\&. 
.RE
.PP

.SS "\fBacp_set_it_t\fP acp_increment_set_it (\fBacp_set_it_t\fP it)"

.PP
Increment an iterater of a set data\&. 
.PP
\fBParameters:\fP
.RS 4
\fIit\fP A reference of set type iterator\&. 
.RE
.PP
\fBReturn values:\fP
.RS 4
\fImember elem == ACP_GA_NULL\fP Fail 
.br
\fIotherwise\fP The next iterator of the specified one\&. 
.RE
.PP

.SS "int acp_insert_set (\fBacp_set_t\fP set, \fBacp_element_t\fP key)"

.PP
Insert a set element\&. 
.PP
\fBParameters:\fP
.RS 4
\fIset\fP A reference of set type data 
.br
\fIkey\fP An inserting key 
.RE
.PP
\fBReturn values:\fP
.RS 4
\fImember success == 1\fP Success 
.br
\fImember success == 0\fP Fail 
.br
\fImember it\fP An iterator for the iserted key 
.RE
.PP

.SS "void acp_merge_local_set (\fBacp_set_t\fP set1, \fBacp_set_t\fP set2)"

.PP
Merge the local keys\&. Among the keys of set2, merge the keys that are allocated in the caller process to set1\&.
.PP
\fBParameters:\fP
.RS 4
\fIset1\fP A reference of the destination set type data 
.br
\fIset2\fP A reference of the source set type data 
.RE
.PP

.SS "void acp_merge_set (\fBacp_set_t\fP set1, \fBacp_set_t\fP set2)"

.PP
Merge the keys\&. Merge set2 to set1\&.
.PP
\fBParameters:\fP
.RS 4
\fIset1\fP A reference of the destination set type data 
.br
\fIset2\fP A reference of the source set type data 
.RE
.PP

.SS "void acp_move_local_set (\fBacp_set_t\fP set1, \fBacp_set_t\fP set2)"

.PP
Move the local keys\&. Among the keys of set2, move the keys that are allocated in the caller process to set1\&.
.PP
\fBParameters:\fP
.RS 4
\fIset1\fP A reference of the destination set type data 
.br
\fIset2\fP A reference of the source set type data 
.RE
.PP

.SS "void acp_move_set (\fBacp_set_t\fP set1, \fBacp_set_t\fP set2)"

.PP
Move the keys\&. Move the keys of set2 to set1\&.
.PP
\fBParameters:\fP
.RS 4
\fIset1\fP A reference of the destination set type data 
.br
\fIset2\fP A reference of the source set type data 
.RE
.PP

.SS "void acp_remove_set (\fBacp_set_t\fP set, \fBacp_element_t\fP key)"

.PP
Erase a set element\&. Delete the key of set that matches with key\&.
.PP
\fBParameters:\fP
.RS 4
\fIset\fP set 
.br
\fIkey\fP key 
.RE
.PP

.SS "size_t acp_size_local_set (\fBacp_set_t\fP set)"

.PP
Query of the number ot local keys in the set\&. 
.PP
\fBParameters:\fP
.RS 4
\fIset\fP A referenc of the set data 
.RE
.PP
\fBReturn values:\fP
.RS 4
\fIsize_t\fP Numbers of keys 
.RE
.PP

.SS "size_t acp_size_set (\fBacp_set_t\fP set)"

.PP
Query of the data size in the set\&. 
.PP
\fBParameters:\fP
.RS 4
\fIset\fP A referenc of the set data 
.RE
.PP
\fBReturn values:\fP
.RS 4
\fIsize_t\fP The data size in the set 
.RE
.PP

.SS "void acp_swap_set (\fBacp_set_t\fP set1, \fBacp_set_t\fP set2)"

.PP
Swap set type data\&. 
.PP
\fBParameters:\fP
.RS 4
\fIset1\fP A reference of set data to be swapped\&. 
.br
\fIset2\fP Another reference of set data to be swapped\&. 
.RE
.PP

.SH "Author"
.PP 
Generated automatically by Doxygen for ACP Library from the source code\&.
